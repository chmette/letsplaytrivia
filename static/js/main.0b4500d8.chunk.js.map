{"version":3,"sources":["components/Home.jsx","components/Game/Question.jsx","components/Game/Evaluation.jsx","components/Game/Game.jsx","components/Setup/DifficultyRadio.jsx","components/Setup/AmountDropdown.jsx","components/Setup/CategorySelect.jsx","components/Setup/UserName.jsx","components/Setup/Setup.jsx","components/App.jsx","index.js"],"names":["Home","className","to","Question","category","question","answers","solution","points","setAmountOfQuestionsLeft","amountOfQuestionsLeft","setUserAnswers","userAnswers","useState","sort","answer","setAnswer","toggle","setToggle","choices","map","choice","onClick","type","checked","value","onChange","dangerouslySetInnerHTML","__html","current","Evaluation","userName","res","compareResults","item","i","correct_answer","length","src","alt","Game","data","results","useRef","incorrect_answers","document","body","setAttribute","DifficultyRadio","radio","setRadio","e","target","AmountDropdown","amount","setAmount","CategorySelect","setCategory","options","UserName","changeHandler","name","placeholder","Setup","showGame","setShowGame","setUserName","setData","warningOne","setWarningOne","warningTwo","setWarningTwo","URI","useEffect","a","fetch","response","json","console","error","message","fetchData","required","response_code","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"wMAeeA,G,MAZF,WACT,OACE,uBAAMC,UAAU,iBAAhB,UACE,qBAAKA,UAAU,cACX,oBAAIA,UAAU,gBAAd,uCACJ,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,wBAAQD,UAAU,YAAlB,qC,wCCiEKE,EAvEE,SAAC,GAUX,IATLC,EASI,EATJA,SACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,SACAC,EAKI,EALJA,OACCC,EAIG,EAJHA,yBACDC,EAGI,EAHJA,sBACAC,EAEI,EAFJA,eACAC,EACI,EADJA,YACI,EAKwBC,mBAASP,EAAQQ,OAAO,IALhD,mBAKGC,EALH,KAKWC,EALX,OAQwBH,oBAAS,GARjC,mBAQGI,EARH,KAQWC,EARX,KAYEC,EAAUb,EAAQQ,OAAOM,KAAI,SAACC,GAClC,OACE,sBAAKpB,UAAWc,IAAWM,EAAS,iBAAiB,mBAAqBC,QAAS,kBAAMN,EAAUK,IAAnG,UACE,uBACEpB,UAAU,cACVsB,KAAK,QACLC,QAAST,IAAWM,EACpBI,MAAOJ,EACPK,SAAU,kBAAMV,EAAUK,MAE5B,uBAAOM,wBAAyB,CAAEC,OAAQP,WAoBhD,OACG,oCACKJ,GACE,sBAAKhB,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAI0B,wBAAyB,CAAEC,OAAQxB,KACvC,oBAAIuB,wBAAyB,CAAEC,OAAQvB,QAExCc,EACD,wBAAQlB,UAAU,YAAYqB,QAvBpB,WACpBJ,GAAU,GACVT,EAAyBC,GAAyB,GAClDC,EAAe,GAAD,mBAAKC,GAAL,CAAkBG,KAC5BA,IAAWR,IACbC,EAAOqB,SAAW,IAkBV,0BCDCC,EA5DI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,IAAKpB,EAA0B,EAA1BA,YAAaJ,EAAa,EAAbA,OAExCyB,EAAiBD,EAAIZ,KAAI,SAACc,EAAMC,GAClC,OAAID,EAAKE,iBAAmBxB,EAAYuB,GAElC,sBAAKlC,UAAU,uBAAf,UACE,2CACYkC,EAAI,EADhB,KACqB,IACnB,sBACER,wBAAyB,CAAEC,OAAQM,EAAK7B,eAG5C,yCACA,gDACgB,sBACZsB,wBAAyB,CAAEC,OAAQhB,EAAYuB,MAFnD,uBAG8B,sBAC1BR,wBAAyB,CAAEC,OAAQM,EAAKE,kBACjC,UAMb,sBAAKnC,UAAU,oBAAf,UACE,2CACYkC,EAAI,EADhB,MACqB,sBACjBR,wBAAyB,CAAEC,OAAQM,EAAK7B,YACjC,OAEX,uCACA,gDACgB,sBACZsB,wBAAyB,CAAEC,OAAQhB,EAAYuB,MAFnD,uBAG8B,sBAC1BR,wBAAyB,CAAEC,OAAQM,EAAKE,2BAa5D,OACI,0BAASnC,UAAU,uBAAnB,UACI,qBAAIA,UAAU,sBAAd,UAAqC8B,EAArC,gBACJ,qBAAI9B,UAAWO,EAAOqB,QAAUG,EAAIK,OAAS,EAAI,yBAA2B,uBAA5E,UAAqG7B,EAAOqB,QAA5G,MAAwHG,EAAIK,UAC5H,qBAAKpC,UAAU,WAAf,SAA0B,qBAAKqC,IAAK9B,EAAOqB,QAAUG,EAAIK,OAAS,EAAI,yDAA2D,kEAAmEE,IAAI,OAEvMN,EACD,cAAC,IAAD,CAAM/B,GAAG,IAAT,SAAa,wBAAQD,UAAU,YAAlB,4BCRFuC,EA7CF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SAEdC,EAAMS,EAAKC,QACXlC,EAASmC,iBAAO,GAHa,EAQuB9B,mBAASmB,EAAIK,QARpC,mBAQ5B3B,EAR4B,KAQLD,EARK,OAUGI,mBAAS,IAVZ,mBAU5BD,EAV4B,KAUfD,EAVe,KAe7BN,EAAW2B,EAAIZ,KAAI,SAACc,EAAKC,GAC7B,OAAO,cAAC,EAAD,CAEL/B,SAAU8B,EAAK9B,SACfC,SAAU6B,EAAK7B,SACfC,QAAO,sBAAM4B,EAAKU,mBAAX,CAA8BV,EAAKE,iBACxC7B,SAAU2B,EAAKE,eACf5B,OAAQA,EACRuB,SAAUA,EACZtB,yBAA0BA,EAC1BC,sBAAuBA,EACvBC,eAAgBA,EAChBC,YAAaA,GAVRuB,MAqBX,OAPEzB,EAAwB,EAAImC,SAASC,KAAKC,aAAa,QAA3B,oBAA0DF,SAASC,KAAKC,aAAa,QAA3B,mBAQtF,sBAAK9C,UAAU,qBAAf,UACGI,EAC0B,IAA1BK,GAA+B,cAAE,EAAF,CAAaqB,SAAUA,EAAUC,IAAKA,EAAKpB,YAAaA,EAAaJ,OAASA,QCInGwC,EAhDS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SAE9B,OACE,yBAASjD,UAAU,QAAnB,SACE,sBAAKA,UAAU,kBAAf,UACE,uBACEA,UAAqB,SAAVgD,EAAmB,eAAiB,iBAC/C3B,QAAS,kBAAM4B,EAAS,SAF1B,kBAMA,uBACEjD,UAAU,cACVsB,KAAK,QACLC,QAAmB,SAAVyB,EACTxB,MAAM,OACNC,SAAU,SAACyB,GAAD,OAAOD,EAASC,EAAEC,OAAO3B,UAErC,uBACExB,UAAqB,WAAVgD,EAAqB,eAAiB,iBACjD3B,QAAS,kBAAM4B,EAAS,WAF1B,oBAMA,uBACEjD,UAAU,cACVsB,KAAK,QACLC,QAAmB,WAAVyB,EACTxB,MAAM,SACNC,SAAU,SAACyB,GAAD,OAAOD,EAASC,EAAEC,OAAO3B,UAErC,uBACExB,UAAqB,SAAVgD,EAAmB,eAAiB,iBAC/C3B,QAAS,kBAAM4B,EAAS,SAF1B,kBAMA,uBACEjD,UAAU,cACVsB,KAAK,QACLC,QAAmB,SAAVyB,EACTxB,MAAM,OACNC,SAAU,SAACyB,GAAD,OAAOD,EAASC,EAAEC,OAAO3B,gBChBhC4B,EA1BQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC9B,OACE,sBAAKtD,UAAU,iBAAf,UACE,wDACA,yBAAQwB,MAAO6B,EAAQ5B,SAAU,SAACyB,GAAD,OAAOI,EAAUJ,EAAEC,OAAO3B,QAA3D,UACI,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,uBC0BG+B,EA9CQ,SAAC,GAA6B,IAA5BpD,EAA2B,EAA3BA,SAAUqD,EAAiB,EAAjBA,YA4BzBC,EA3Ba,CACjB,oBACA,uBACA,sBACA,uBACA,qCACA,4BACA,6BACA,6BACE,mBACA,qBACA,uBACA,YACA,SACA,YACA,UACA,WACA,MACA,cACA,UACA,WACA,wBACA,mBACA,wCACF,uCAGyBtC,KAAI,SAACc,EAAMC,GAClC,OAAO,wBAAgBV,MAAK,UAAKU,EAAI,GAA9B,SAAqCD,GAAxBC,MAOxB,OACO,gCACE,uBAAOlC,UAAU,iBAAjB,oCACG,wBAAQA,UAAU,iBAAiBwB,MAAOrB,EAAUsB,SAAU,SAACyB,GAAD,OAAOM,EAAYN,EAAEC,OAAO3B,QAA1F,SACKiC,QCzBNC,EAfE,SAAC,GAA+B,IAA7B5B,EAA4B,EAA5BA,SAAU6B,EAAkB,EAAlBA,cAC1B,OACI,8BACI,uBACA3D,UAAU,cACVsB,KAAK,OACLsC,KAAK,OACLC,YAAY,oBACZrC,MAAOM,EACPL,SAAUkC,OC4FPG,EA7FD,WAAM,MAGalD,oBAAS,GAHtB,mBAGZmD,EAHY,KAGFC,EAHE,OAIapD,mBAAS,IAJtB,mBAIZkB,EAJY,KAIFmC,EAJE,OAKOrD,mBAAS,QALhB,mBAKZoC,EALY,KAKLC,EALK,OAMSrC,mBAAS,KANlB,mBAMZyC,EANY,KAMJC,EANI,OAOa1C,mBAAS,KAPtB,mBAOZT,EAPY,KAOFqD,EAPE,OAQK5C,mBAAS,IARd,mBAQZ4B,EARY,KAQN0B,EARM,OASiBtD,oBAAS,GAT1B,mBASZuD,EATY,KASAC,EATA,OAUiBxD,oBAAS,GAV1B,mBAUZyD,EAVY,KAUAC,EAVA,KAeZC,EAAG,6CAAyClB,EAAzC,qBAA4DlD,EAA5D,uBAAmF6C,EAAnF,kBAETwB,qBAAU,WAAM,4CACb,8BAAAC,EAAA,+EAE2BC,MAAMH,GAFjC,cAEUI,EAFV,gBAGuBA,EAASC,OAHhC,OAGUpC,EAHV,OAII0B,EAAQ1B,GAJZ,kDAMIqC,QAAQC,MAAM,KAAMC,SANxB,2DADa,uBAAC,WAAD,wBAUdC,KACC,CAACT,IA4BJ,OACE,0BAASvE,UAAU,kBAAnB,WACI+D,GAEE,0BAAS/D,UAAU,SAAnB,UACE,oBAAIA,UAAU,eAAd,8BACA,cAAC,EAAD,CACE8B,SAAUA,EACV6B,cA9BS,SAACT,GACpBe,EAAYf,EAAEC,OAAO3B,QA8BXyD,UAAQ,IAEV,cAAC,EAAD,CAAiBjC,MAAOA,EAAOC,SAAUA,IACzC,cAAC,EAAD,CAAgBI,OAAQA,EAAQC,UAAWA,IAC3C,cAAC,EAAD,CAAgBnD,SAAUA,EAAUqD,YAAaA,IACjD,wBACAxD,UAAU,YACVqB,QAjCS,WACQ,IAAvBmB,EAAK0C,eACKd,GAAc,GACdE,GAAc,IACkB,IAAvB9B,EAAK0C,eAAuBpD,EAASM,OAAS,EACvD4B,GAAY,IAEZI,GAAc,GACdE,GAAc,KAuBlB,wBAMCH,EACC,kGAEQ,6BAETE,GACC,wFAKPN,GAAY,cAAC,EAAD,CAAMvB,KAAMA,EAAMV,SAAUA,QC1EhCqD,EAXH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWvF,IAChD,cAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,QAAQC,UAAWxB,UCZ7CyB,IAASC,OAAO,cAAC,EAAD,IAAS5C,SAAS6C,eAAe,W","file":"static/js/main.0b4500d8.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n    return (\n      <main className=\"home-container\">    \n        <div className='start-gif'></div>\n            <h1 className=\"start-heading\" >It's Trivia Time Bitches!</h1>\n        <Link to=\"/Game\">\n          <button className='startGame'>Start Your Game </button>\n        </Link>\n      </main>\n    );\n}\n\nexport default Home\n","import React, { useState } from \"react\";\n\n\nconst Question = ({\n  category,\n  question,\n  answers,\n  solution,\n  points,\n   setAmountOfQuestionsLeft,\n  amountOfQuestionsLeft,\n  setUserAnswers,\n  userAnswers\n}) => {\n\n\n  //UseStates\n\n  const [answer, setAnswer] = useState(answers.sort()[0]);\n\n  //toggle to hide the Question go to the next one\n  const [toggle, setToggle] = useState(false);\n\n\n  // give/show answerOptions\n  const choices = answers.sort().map((choice) => {\n    return (\n      <div className={answer === choice ? 'answer-success':'answer-container' } onClick={() => setAnswer(choice)}>\n        <input\n          className='radioAnswer'\n          type=\"radio\"\n          checked={answer === choice}\n          value={choice}\n          onChange={() => setAnswer(choice)}\n        />\n        <label dangerouslySetInnerHTML={{ __html: choice }} />\n      </div>\n    );\n  });\n\n  // hide question, reduces amount of left questions, add points if right, set answer \n  const submitHandler = () => {\n    setToggle(true);\n    setAmountOfQuestionsLeft(amountOfQuestionsLeft -= 1)\n    setUserAnswers([...userAnswers, answer]); \n    if (answer === solution) {\n      points.current += 1;\n    }\n  };\n\n\n//---------------------------\n//Return Statement \n//---------------------------\n\n  return (\n     <>\n        {!toggle && (\n            <div className=\"question\">\n              <div className='question-heading'>\n                <h4 dangerouslySetInnerHTML={{ __html: category }} />\n                <h3 dangerouslySetInnerHTML={{ __html: question }} />\n              </div>\n              {choices}\n              <button className=\"submitBtn\" onClick={submitHandler}>\n                Submit\n              </button>\n            </div>\n        )}\n     </>\n\n  );\n};\n\nexport default Question;\n","import React, {useEffect, useState} from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Evaluation = ({ userName, res, userAnswers, points }) => {\n\n    const compareResults = res.map((item, i) => {\n        if (item.correct_answer === userAnswers[i]) {\n            return (\n              <div className=\"success show-results\">\n                <h3>\n                  Question {i + 1} :{\" \"}\n                  <span\n                    dangerouslySetInnerHTML={{ __html: item.question }}\n                  ></span>\n                </h3>\n                <h4>Correct</h4>\n                <h4>\n                  User Answer = <span\n                    dangerouslySetInnerHTML={{ __html: userAnswers[i] }}\n                  ></span> : Correct Answer = <span\n                    dangerouslySetInnerHTML={{ __html: item.correct_answer }}\n                  ></span>{\" \"}\n                </h4>\n              </div>\n            );\n        } else {\n            return (\n              <div className=\"fail show-results\">\n                <h3>\n                  Question {i + 1} : <span\n                    dangerouslySetInnerHTML={{ __html: item.question }}\n                  ></span>{\" \"}\n                </h3>\n                <h4>Wrong</h4>\n                <h4>\n                  User Answer = <span\n                    dangerouslySetInnerHTML={{ __html: userAnswers[i] }}\n                  ></span> : Correct Answer = <span\n                    dangerouslySetInnerHTML={{ __html: item.correct_answer }}\n                  ></span>\n                </h4>\n              </div>\n            );\n        }\n    }) \n  \n\n//---------------------------\n//Return Statement \n//---------------------------\n// {points.current > res.length / 2 ? successMemes.url : failMemes.url}\nreturn (\n    <section className=\"evaluation-container\">\n        <h2 className=\"evaluation-username\">{userName}'s Result </h2>\n    <h3 className={points.current > res.length / 2 ? \"evaluation-score-green\" : 'evaluation-score-red'}>{points.current} / {res.length}</h3>\n    <div className='eval-img'><img src={points.current > res.length / 2 ? \"https://media.giphy.com/media/11ISwbgCxEzMyY/giphy.gif\" : 'https://media.giphy.com/media/xNRBrdEaYym76/giphy-downsized.gif'} alt=\"\"/>\n    </div>\n    {compareResults}\n    <Link to=\"/\"><button className='submitBtn'>New Game</button></Link>\n    </section>\n  )\n}\n\nexport default Evaluation","import React, {useRef, useState} from 'react';\nimport Question from \"./Question\";\nimport Evaluation from \"./Evaluation\";\n\n\nconst Game = ({ data, userName }) => {\n  \n  const res = data.results;\n  const points = useRef(0);\n\n  //useStates\n  \n  \n  const [amountOfQuestionsLeft, setAmountOfQuestionsLeft] = useState(res.length);\n  \n  const [userAnswers, setUserAnswers] = useState([]);\n  \n \n// create questions from apiData\n\n  const question = res.map((item,i) => {\n    return <Question \n      key={i}\n      category={item.category}\n      question={item.question}\n      answers={[...item.incorrect_answers, item.correct_answer]}\n        solution={item.correct_answer}\n        points={points}\n        userName={userName}\n      setAmountOfQuestionsLeft={setAmountOfQuestionsLeft}\n      amountOfQuestionsLeft={amountOfQuestionsLeft}\n      setUserAnswers={setUserAnswers}\n      userAnswers={userAnswers}\n    />\n  })\n  \n  amountOfQuestionsLeft > 0 ? document.body.setAttribute(\"style\", `position: fixed;`) : document.body.setAttribute(\"style\", `position: none;`)\n\n  \n//---------------------------\n//Return Statement \n//---------------------------\n\nreturn (\n  <div className='question-container' >\n    {question}\n    {amountOfQuestionsLeft === 0 && < Evaluation userName={userName} res={res} userAnswers={userAnswers} points={ points}/> }\n    </div>\n)}\n\nexport default Game ","import React from 'react';\n\nconst DifficultyRadio = ({ radio, setRadio })=>{\n    \n    return (\n      <section className=\"radio\">\n        <div className=\"multi-container\">\n          <label\n            className={radio === \"easy\" ? \"radio-chosen\" : \"radio-tochoose\"}\n            onClick={() => setRadio(\"easy\")}\n          >\n            Easy\n          </label>\n          <input\n            className=\"radioAnswer\"\n            type=\"radio\"\n            checked={radio === \"easy\"}\n            value=\"easy\"\n            onChange={(e) => setRadio(e.target.value)}\n          />\n          <label\n            className={radio === \"medium\" ? \"radio-chosen\" : \"radio-tochoose\"}\n            onClick={() => setRadio(\"medium\")}\n          >\n            Medium\n          </label>\n          <input\n            className=\"radioAnswer\"\n            type=\"radio\"\n            checked={radio === \"medium\"}\n            value=\"medium\"\n            onChange={(e) => setRadio(e.target.value)}\n          />\n          <label\n            className={radio === \"hard\" ? \"radio-chosen\" : \"radio-tochoose\"}\n            onClick={() => setRadio(\"hard\")}\n          >\n            Hard\n          </label>\n          <input\n            className=\"radioAnswer\"\n            type=\"radio\"\n            checked={radio === \"hard\"}\n            value=\"hard\"\n            onChange={(e) => setRadio(e.target.value)}\n          />\n        </div>\n      </section>\n    );}\n\nexport default DifficultyRadio;","import React from 'react';\n\nconst AmountDropdown = ({ amount, setAmount }) => {\n    return (\n      <div className=\"amountDropdown\">\n        <label>Amount of questions</label>\n        <select value={amount} onChange={(e) => setAmount(e.target.value)}>\n            <option value='5'>5</option>\n            <option value='6'>6</option>\n            <option value='7'>7</option>\n            <option value='8'>8</option>\n            <option value='9'>9</option>\n            <option value='10'>10</option>\n            <option value='11'>11</option>\n            <option value='12'>12</option>\n            <option value='13'>13</option>\n            <option value='14'>14</option>\n            <option value='15'>15</option>\n            <option value='16'>16</option>\n            <option value='17'>17</option>\n            <option value='18'>18</option>\n            <option value='19'>19</option>\n            <option value='20'>20</option>\n        </select>\n      </div>\n    );\n}\n\nexport default AmountDropdown","import React from 'react'\n\nconst CategorySelect = ({category, setCategory}) => {\n    const categories = [\n      \"General Knowledge\",\n      \"Entertainment: Books\",\n      \"Entertainment: Film\",\n      \"Entertainment: Music\",\n      \"Entertainment: Musicals & Theatres\",\n      \"Entertainment: Television\",\n      \"Entertainment: Video Games\",\n      \"Entertainment: Board Games\",\n        \"Science & Nature\",\n        \"Science: Computers\",\n        \"Science: Mathematics\",\n        \"Mythology\",\n        \"Sports\",\n        \"Geography\",\n        \"History\", \n        \"Politics\",\n        \"Art\",\n        \"Celebrities\",\n        \"Animals\",\n        \"Vehicles\",\n        \"Entertainment: Comics\",\n        \"Science: Gadgets\",\n        \"Entertainment: Japanese Anime & Mange\",\n      \"Entertainment: Cartoon & Animations\"\n    ];\n\n    const options = categories.map((item, i) => {\n        return <option key={i} value={`${i + 9}`} >{item}</option>;\n    })\n\n//---------------------------\n//Return Statement \n//---------------------------\n\n    return (\n           <div>\n             <label className='categorySelect'>Select Trivia Category</label>\n                <select className='categorySelect' value={category} onChange={(e) => setCategory(e.target.value)} >\n                    {options}\n                </select>  \n           </div>\n    );\n}\n\nexport default CategorySelect;\n","import React from 'react';\n\nconst UserName = ({ userName, changeHandler })=>{\n    return (\n        <div>\n            <input\n            className=\"setup-input\"\n            type='text'\n            name='name'\n            placeholder='Set your Username'\n            value={userName}\n            onChange={changeHandler}\n            />\n        </div>\n    )\n}\n\nexport default UserName","import React, {useState, useEffect} from 'react'\n\nimport Game from \"../Game/Game\"\nimport DifficultyRadio from './DifficultyRadio';\nimport AmountDropdown from './AmountDropdown';\nimport CategorySelect from \"./CategorySelect\";\nimport UserName from './UserName';\n\n\n\nconst Setup = () => {\n\n//useStates  \n const [showGame, setShowGame] = useState(false);\n const [userName, setUserName] = useState('');\n const [radio, setRadio] = useState(\"easy\");\n const [amount, setAmount] = useState('5')\n const [category, setCategory] = useState('9');\n const [data, setData] = useState([]);\n const [warningOne, setWarningOne] = useState(false);\n const [warningTwo, setWarningTwo] = useState(false);\n\n\n\n// API \n  const URI = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${radio}&type=multiple`;\n\n  useEffect(() => {\n     async function fetchData() {\n       try {\n         const response = await fetch(URI);\n         const data = await response.json();\n         setData(data);\n       } catch (error) {\n         console.error(error.message);\n       }\n     };\n    fetchData()\n  }, [URI]);\n\n\n  // Handlers\n\n  // get Username\n const changeHandler = (e) => {\n    setUserName(e.target.value);\n  };\n\n// show errors in setUpScreen\nconst clickhandler = () =>{\n  if (data.response_code === 1) {\n                setWarningOne(true);\n                setWarningTwo(false);\n              } else if (data.response_code === 0 && userName.length > 2) {\n                setShowGame(true);\n              } else {\n                setWarningOne(false);\n                setWarningTwo(true);\n              }             \n }\n\n//---------------------------\n//Return Statement \n//---------------------------\n\n\n  return (\n    <section className=\"setup-container\">\n      {!showGame && (\n       \n          <section className=\"setup \">\n            <h1 className=\"setup-header\">Set Up Your Game</h1>\n            <UserName\n              userName={userName}\n              changeHandler={changeHandler}\n              required\n            />\n            <DifficultyRadio radio={radio} setRadio={setRadio} />\n            <AmountDropdown amount={amount} setAmount={setAmount} />\n            <CategorySelect category={category} setCategory={setCategory} />\n            <button\n            className=\"startGame\"\n            onClick={clickhandler}\n            >\n              Start Game\n            </button>\n            {warningOne ? \n              <h5>\n                Some categories have limited amounts of questions, please reset!\n              </h5> : <></>\n            }\n            {warningTwo && (\n              <h5>You must enter a user name of minimum 3 characters!</h5>\n            )}\n          </section>\n       \n      )}\n      {showGame && <Game data={data} userName={userName} />}\n      {/* <div className='think-gif' style={{display: showGame ? 'none': 'block'}} ></div> */}\n    </section>\n  );\n}\n\nexport default Setup","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport '../css/App.css';\n\nimport Home from \"./Home\";\nimport Setup from \"./Setup/Setup\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/letsplaytrivia/\" component={Home} />\n        <Route exact path=\"/Game\" component={Setup} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}